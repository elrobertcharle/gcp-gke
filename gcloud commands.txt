gcloud projects list
gcloud config list
gcloud config set project <project-id>

list anabled services only
gcloud services list --enabled
gcloud services enable <api-name> 
//examples:
//gcloud services enable container.googleapis.com
//gcloud services enable artifactregistry.googleapis.com
gcloud artifacts repositories list

//enable a service
gcloud services enable [API_NAME]

//artifact registry
//create a repo
gcloud artifacts repositories create weather-4cee-repo --repository-format=docker --location=us-central1 --description="My weather project"

gcloud auth configure-docker us-central1-docker.pkg.dev
//this config docker to push images to that region
//message: After update, the following will be written to your Docker config file located at [C:\Users\elrob\.docker\config.json]


gcloud components install gke-gcloud-auth-plugin
then
gcloud container clusters get-credentials <cluster name> --location=us-central1
//Running gcloud container clusters get-credentials does one critical thing: it configures your kubectl command-line tool to connect to your new cluster.


then create the cluster
gcloud container clusters create-auto "weather-cluster" --region "us-central1"



docker tag weather_api:1.0 us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api:1.0
docker push us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api:1.0

docker push us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api_migrations:1.0


gcloud artifacts docker images list us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo

//delete existing artifacts in the repo:
gcloud artifacts docker images delete us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api:1.0 --delete-tags
gcloud artifacts docker images delete us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api@sha256:e7e8a97e9019591b23f6230d63c4440a9e451584e797f50c0dc33c3b67dee722 --quiet
gcloud artifacts docker images delete us-central1-docker.pkg.dev/weather-4cee/weather-4cee-repo/weather_api@sha256:0be485aad318b4cf107711bc6a2628adfaf55bbadcd7680bd635885b8ae02877 --quiet


//check ingress health
kubectl get ingress weather-api-ingress



